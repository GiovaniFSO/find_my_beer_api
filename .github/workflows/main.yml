name: Code Pipeline

env:
  RUBY_VERSION: 3.0.2
  NODE_VERSION: 16.10.0
  BUNDLER_VERSION: 2.2.22

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  workflow:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup System
        run: sudo apt-get install -y libsqlite3-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Yarn Install
        run: bin/yarn

      - name: Bundle install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Rspec
        run: |
          bundle exec rails db:prepare
          bundle exec rspec
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Rubocop
        run: bundle exec rubocop -c .rubocop.yml

      - name: Audit
        run: |
          gem install bundler-audit
          bundle-audit --update
        continue-on-error: true
